{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Words","App","handleClick","setState","word","Math","floor","random","length","state","className","this","onClick","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPAEMA,EAAQ,CAAC,QAAS,WAAY,QAAQ,YAAa,WAAW,SAAU,UAAW,WAAY,SAAU,OAAQ,SACvH,kBAAmB,QAAS,kBAAmB,WAAY,QAC3D,WAAY,OACZ,YAAa,OAAQ,YACpB,QAAS,aACV,UAAW,OAAQ,QACnB,MAAO,WAAY,QACnB,MAAO,OAAQ,WACf,UAAW,WAAY,UACvB,WAAY,QAAS,QAAS,YAC9B,WACA,SAAU,eAAgB,UAC1B,QAAS,SAAU,WACnB,SAAU,aAAc,WACxB,MACA,OAAQ,OAAS,QACjB,SAAU,SAAU,OAAQ,UAAY,SAAU,YAClD,OAAQ,UAAW,UACnB,OACA,WAAY,QACZ,WAAY,aAAc,MAC1B,UAAW,aAAc,eAAgB,QAAS,WAClD,SAAU,gBACV,SAAU,SAAU,SACpB,OAAQ,UAAW,UACnB,aAAc,YAAa,UAC3B,SAAU,WAAY,YACtB,YAAa,MAAO,UAAW,WA0BhBC,E,kDAtBb,aAAgB,IAAD,8BACb,gBAKFC,YAAc,WACZ,EAAKC,SAAS,CAACC,KAAOJ,EAAMK,KAAKC,MAAMD,KAAKE,SAAUP,EAAMQ,YAL5D,EAAKC,MAAQ,CACXL,KAAM,IAHK,E,0CASf,WACE,OACM,qBAAKM,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACC,qBAAKA,UAAW,SAAhB,6BACM,qBAAKA,UAAU,OAAf,SACE,qBAAKA,UAAU,YAAf,SAA4BC,KAAKF,MAAML,SACvC,wBAAQM,UAAW,SAASE,QAASD,KAAKT,YAA1C,oC,GAjBHW,IAAMC,WCpBTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.00a5802b.chunk.js","sourcesContent":["import './App.css';\nimport React from 'react';\nconst Words = ['horse', 'backbone', 'Cisco',' dominoes', 'switches','router', 'hot dog', 'computer', 'cowboy', 'frog', 'pirate',\n'salt and pepper', 'happy', 'washing machine', 'sailboat', 'brain',\n'birthday', 'cake',\n'pineapple', 'tusk', 'sprinkler',\n 'spool', 'lighthouse',\n'doormat', 'face', 'flute', \n'rug', 'snowball', 'purse',\n'owl', 'gate', 'suitcase',\n'stomach', 'doghouse', 'pajamas',\n'bathroom', 'scale', 'peach', 'newspaper',\n'watering',\n'beaver', 'french fries', 'beehive',\n'beach', 'artist', 'flagpole',\n'camera', 'hair dryer', 'mushroom',\n'toe',\n'soda', 'chin',  'swing',\n'garden', 'ticket', 'boot', 'husband',  'jungle', 'important',\n'mime', 'peasant', 'baggage',\n'hail',\n'password', 'Covid', \n'dripping', 'pharmacist', 'lie',\n'catalog', 'ringleader', 'neighborhood', 'dizzy', 'fireside',\n'retail', 'drawback logo',\n'fabric', 'mirror', 'barber',\n'jazz', 'migrate', 'drought',\n'commercial', 'dashboard', 'bargain',\n'double', 'download', 'professor',\n'landscape', 'ski', 'goggles', 'vitamin'];\n\n\nclass App extends React.Component {\n  constructor () {\n    super();\n    this.state = {\n      word: ''\n    };\n  }\n  handleClick = () => {\n    this.setState({word:  Words[Math.floor(Math.random()* Words.length)]})\n  }\n  render() {\n    return (\n          <div className=\"App\">\n            <header className=\"App-header\">\n             <div className= 'header'>Word Generater </div>\n                   <div className='word'>\n                     <div className='childWord'>{this.state.word}</div></div>\n                     <button className= 'button' onClick={this.handleClick}>Generate Word</button>\n            </header>\n          </div>)\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}